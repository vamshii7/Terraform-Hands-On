name: provision-test-infra

trigger: none

pool:
  vmImage: 'ubuntu-latest'

resources:
  repositories:
    - repository: terraformRepo
      type: github
      name: vamshii7/Terraform-Hands-On
      ref: main
      endpoint: github.com_vamshii7

stages:
# ==============================
# Stage 1: Deploy / Apply
# ==============================

- stage: Deploy
  displayName: "Deploy AppInfra - Test"
  condition: eq(variables['Build.Reason'], 'Manual')
  jobs:
  - job: Terraform_Apply
    displayName: "Terraform Apply"
    steps:
    - checkout: terraformRepo

    # Install Terraform v1.13.3
    - task: TerraformInstaller@1
      displayName: "Install Terraform"
      inputs:
        terraformVersion: '1.13.3'

    # Verify Terraform installation
    - script: |
        terraform version
        which terraform
        echo "Current working directory: $(pwd)"
      displayName: "Verify Terraform Installation"

    # Terraform Init
    - task: TerraformTask@5
      displayName: "Terraform Init"
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(Build.SourcesDirectory)/appInfra/test'
        backendServiceArm: 'TerraformConnection'
        backendAzureRmResourceGroupName: 'tfstate-rg'
        backendAzureRmStorageAccountName: 'temptfstatesa'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'test.tfstate'

    # Terraform Plan
    - task: TerraformTask@5
      displayName: "Terraform Plan"
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(Build.SourcesDirectory)/appInfra/test'
        environmentServiceNameAzureRM: 'TerraformConnection'

    # Terraform Apply
    - task: TerraformTask@5
      displayName: "Terraform Apply"
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(Build.SourcesDirectory)/appInfra/test'
        commandOptions: '--auto-approve'
        environmentServiceNameAzureRM: 'TerraformConnection'

# ==============================
# Stage 2: Destroy
# ==============================

- stage: Destroy
  displayName: "Destroy AppInfra - Test"
  dependsOn: Deploy
  condition: eq(variables['Build.Reason'], 'Manual')
  jobs:
  - job: Terraform_Destroy
    displayName: "Terraform Destroy"
    steps:
    - checkout: terraformRepo

    # Install Terraform v1.13.3
    - task: TerraformInstaller@1
      displayName: "Install Terraform"
      inputs:
        terraformVersion: '1.13.3'

    # Terraform Init
    - task: TerraformTask@5
      displayName: "Terraform Init"
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(Build.SourcesDirectory)/appInfra/test'
        backendServiceArm: 'TerraformConnection'
        backendAzureRmResourceGroupName: 'tfstate-rg'
        backendAzureRmStorageAccountName: 'temptfstatesa'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'test.tfstate'

    # Terraform Destroy
    - task: TerraformTask@5
      displayName: "Terraform Destroy"
      inputs:
        provider: 'azurerm'
        command: 'destroy'
        workingDirectory: '$(Build.SourcesDirectory)/appInfra/test'
        commandOptions: '--auto-approve'
        environmentServiceNameAzureRM: 'TerraformConnection'